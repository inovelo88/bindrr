<nav class="navbar navbar-default">
  <div class="container-fluid">
    <div class="navbar-header">
      <a class="navbar-brand" href="/logout">
        Logout
      </a>
    </div>
  </div>
</nav>

<div class="container">
  <div class="row">
    <div class="col-md-6 col-md-offset-3">
      <div>
      </div>
      <div class="container">
        <div class="row">
          <div class="col-md-6 col-md-offset-3">
            <h2>Client Information</h2>
            <form class="login">
              <div class="form-group">
                <label for="exampleInputEmail1">First Name</label>
                <input type="text" class="form-control" id="first-name" placeholder="First Name" value="{{first_name}}">
              </div>
              <div class="form-group">
                <label for="exampleInputEmail1">Last Name</label>
                <input type="text" class="form-control" id="last-name" placeholder="Last Name" value="{{last_name}}">
              </div>
              <div class="form-group">
                <label for="gender">Gender</label>
                <br>
                <select name="gender" id="gender">
                  <optgroup label="Gender">
                    <option value="male">Male</option>
                    <option value="female">Female</option>
                    <option value="other">Other</option>
                    <option value="nondisclose">Preferred not to disclose</option>
                  </optgroup>
                </select>
              </div>

              <div class="form-group">
                <label for="client-email">Client Email</label>
                <input type="email" class="form-control" id="client-email" placeholder="Client Email" value="{{email}}">
              </div>
              <div class="form-group">
                <label for="exampleInputPassword1">Phone</label>
                <input type="text" class="form-control" id="phone" placeholder="Phone" value="{{phone}}">
              </div>
              <div class="form-group">
                <label for="exampleInputPassword1">Follow Up</label>
                <input type="text" id="datepicker" class="form-control" placeholder="Follow Up">
              </div>
              {{#each comments}}
                <div class="form-group">
                  <label for="comments">Comment</label>
                  <input type="text" class="comments form-control" placeholder="Comments" value="{{comment}}">
                  <button data-commentid="{{this.id}}" class="delete">Delete</button>
                </div>
              {{/each}}
              <div class="form-group">
                <label for="exampleInputPassword1">New Comment</label>
                <input type="text" id="comment" class="form-control" placeholder="Add new comment">
                <button data-name="{{agent_name}}" id="comment-btn">Add</button>
              </div>
                <br>
                <button id="update-btn" type="submit" class="btn btn-default">Update</button>
            </form>
            <br />
          </div>
        </div>
      </div>

    </div>
  </div>
</div>

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>
  $(function () {
    $("#datepicker").datepicker({
      showOtherMonths: true,
      selectOtherMonths: true
    });
  });

$(document).ready(() => {
  // Getting references to our form and input
  const addForm = $("form.login");
  const firstInput = $("input#first-name");
  const lastInput = $("input#last-name");
  const emailInput = $("input#client-email");
  const genderInput = $("select#gender");
  const phoneInput = $("input#phone");
  const commentInput = $("input#comment");
  const id = {{id}};
  //Also needs a company number/id

  $("#comment-btn").on("click", function(event) {
    event.preventDefault();
    const agentName = $(this).data("name")
    const newComment = {
      comment: commentInput.val().trim(),
      author: agentName,
      ClientId: id
    };  
    $.ajax("/api/comments", {
      type: "POST",
      data: newComment
    }).then(
      function() {
        location.reload();
      }
    )
  });

    $("#update-btn").on("click", function(event) {
    event.preventDefault();
    const updateClient = {
      first_name: firstInput.val().trim(),
      last_name: lastInput.val().trim(),
      gender: genderInput.val().trim(),
      email: emailInput.val().trim(),
      phone: phoneInput.val().trim()
    };  
    $.ajax(`/api/clients/${id}`, {
      type: "PUT",
      data: updateClient
    }).then(
      function() {
        location.reload();
      }
    )
  })

  /*
  // When the add button is clicked, we validate that the form are not blank
  addForm.on("submit", event => {
    event.preventDefault();
    const userData = {
      first: firstInput.val().trim(),
      last: lastInput.val().trim(),
      gender: genderInput.val().trim(),
      email: emailInput.val().trim(),
      phone: phoneInput.val().trim()
    };

    if (!userData.first || !userData.last || !userData.gender || !userData.email || !userData.phone) {
      return;
    }
    // If we have all data, run the addLead function
    addLead(userData.first, userData.last, userData.gender, userData.email, userData.phone);
    firstInput.val("");
    lastInput.val("");
    genderInput.val("");
    emailInput.val("");
    phoneInput.val("");
  });

  // Does a post to the add route. If successful, we are redirected to the current lead page
  // Otherwise we log any errors
  function addLead(first, last, gender, email, phone) {
    $.post("/api/clients", {
      first_name: first,
      last_name: last,
      email: email,
      phone: phone,
      gender: gender,
      //id: req.body.id
      //This post should go to the post route which generates a new instance of a Client.
    })
      .then(() => {
        //GET the ID of this newly created lead.
        //$.get("/api/clients/:id")
      })
      .then(() => {
        //Redirect to the new current lead page of the lead we just generated. 
        window.location.replace(`/clients/${req.params.id}`);
      })
      // If there's an error, handle it by throwing up a bootstrap alert
      .catch(handleLoginErr);
  }

  function handleLoginErr(err) {
    $("#alert .msg").text(err.responseJSON);
    $("#alert").fadeIn(500);
  }
  */
});

</script>